<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ManagerStandardLibrary</name>
    </assembly>
    <members>
        <member name="T:ManagerStandardLibrary.StandardLibraryManage">
            <summary>
            标准库接口实现
            </summary>
        </member>
        <member name="M:ManagerStandardLibrary.StandardLibraryManage.AddEnumList(System.Collections.Generic.List{EntitysStandardLibrary.EnumConfigurationEnt})">
            <summary>
            批量增加枚举
            </summary>
            <param name="DataList">要添加的枚举值.</param>
            <returns></returns>
        </member>
        <member name="M:ManagerStandardLibrary.StandardLibraryManage.DeleteEnumList(System.Collections.Generic.List{System.String})">
            <summary>
            批量删除枚举
            </summary>
            <param name="ConfigID">The configuration identifier.</param>
            <returns></returns>
        </member>
        <member name="M:ManagerStandardLibrary.StandardLibraryManage.GetAllEnumClassify">
            <summary>
            获取所有枚举类型
            类型下存放相应类型的枚举值
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagerStandardLibrary.StandardLibraryManage.GetEnumindex(System.String,System.String)">
            <summary>
            根据枚举类型和值获取索引号
            </summary>
            <param name="type">枚举类型，比如故障原因分类</param>
            <param name="value">枚举值</param>
        </member>
        <member name="M:ManagerStandardLibrary.StandardLibraryManage.GetEnumListByType(System.String)">
            <summary>
            根据枚举类型获取枚举列表
            </summary>
            <param name="type">枚举类型，比如故障原因分类</param>
            <returns></returns>
        </member>
        <member name="M:ManagerStandardLibrary.StandardLibraryManage.GetEnumvalue(System.String,System.Int32)">
            <summary>
            根据枚举类型和取索引号获取值
            </summary>
            <param name="type"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:ManagerStandardLibrary.StandardLibraryManage.UpdateEnumList(System.Collections.Generic.List{EntitysStandardLibrary.EnumConfigurationEnt})">
            <summary>
            批量更新枚举
            </summary>
            <param name="DataList">要修改的枚举值</param>
            <returns></returns>
        </member>
        <member name="M:ManagerStandardLibrary.StandardLibraryManage.GetAllFactoryList">
            <summary>
            Gets all factory list.
            </summary>
            <returns></returns>
            创建人:刘俊  创建时间:2019/10/8 15:54
        </member>
        <member name="M:ManagerStandardLibrary.StandardLibraryManage.GetFactoryById(System.Guid)">
            <summary>
            Gets the factory by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
            创建人:刘俊  创建时间:2019/10/8 15:54
        </member>
        <member name="M:ManagerStandardLibrary.StandardLibraryManage.AddFactory(EntitysStandardLibrary.EquipmentFacEnt)">
            <summary>
            Adds the factory.
            </summary>
            <param name="ent">The ent.</param>
            <returns></returns>
            创建人:刘俊  创建时间:2019/10/8 15:54
        </member>
        <member name="M:ManagerStandardLibrary.StandardLibraryManage.DeleteFactory(System.Guid)">
            <summary>
            Deletes the factory.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
            创建人:刘俊  创建时间:2019/10/8 15:54
        </member>
        <member name="M:ManagerStandardLibrary.StandardLibraryManage.UpdateFactory(EntitysStandardLibrary.EquipmentFacEnt)">
            <summary>
            Updates the factory.
            </summary>
            <param name="ent">The ent.</param>
            <returns></returns>
            创建人:刘俊  创建时间:2019/10/8 15:54
        </member>
        <member name="M:ManagerStandardLibrary.StandardLibraryManage.GetDistance(System.Guid,System.Double)">
            <summary>
            计算最大监测距离
            </summary>
            <param name="entId">族ID</param>
            <param name="focalLength">焦距</param>
            <returns></returns>
        </member>
        <member name="T:ManagerStandardLibrary.WebApiHelper">
            <summary>
            用于调用webapi的类
            </summary>
        </member>
        <member name="F:ManagerStandardLibrary.WebApiHelper.DESEncode">
            <summary>
            数据加密方法代理
            </summary>
        </member>
        <member name="P:ManagerStandardLibrary.WebApiHelper.ApiAddress">
            <summary>
            webapi 地址，不包含controller/action
            </summary>
        </member>
        <member name="P:ManagerStandardLibrary.WebApiHelper.DesKey">
            <summary>
            与服务端通信的秘钥
            </summary>
        </member>
        <member name="M:ManagerStandardLibrary.WebApiHelper.GetSecurityInfo">
            <summary>
            获取与服务端通信时加密的秘钥
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagerStandardLibrary.WebApiHelper.Post``1(System.String)">
            <summary>
            调用webapi指定接口的方法
            </summary>
            <typeparam name="TResult">返回值类型</typeparam>
            <param name="actionName">接口名称（controller/action）</param>
            <returns></returns>
        </member>
        <member name="M:ManagerStandardLibrary.WebApiHelper.Post``1(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            调用webapi指定接口的方法
            </summary>
            <typeparam name="TResult">返回值类型</typeparam>
            <param name="actionName">接口名称（controller/action）</param>
            <param name="simpleParas">简单类型参数（键值对）</param>
            <returns></returns>
        </member>
        <member name="M:ManagerStandardLibrary.WebApiHelper.Post``1(System.String,System.Object)">
            <summary>
            调用webapi指定接口的方法
            </summary>
            <typeparam name="TResult">返回值类型</typeparam>
            <param name="actionName">接口名称（controller/action）</param>
            <param name="entData">要传输的实体数据</param>
            <returns></returns>
        </member>
        <member name="M:ManagerStandardLibrary.WebApiHelper.Post``1(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Object)">
            <summary>
            调用webapi指定接口的方法
            </summary>
            <typeparam name="TResult">返回值类型</typeparam>
            <param name="actionName">接口名称（controller/action）</param>
            <param name="simpleParas">简单类型参数（键值对）</param>
            <param name="entData">要传输的实体数据</param>
            <returns></returns>
        </member>
        <member name="T:ManagerStandardLibrary.WebApiHelper.MsgResult">
            <summary>
            用于数据传输的类
            </summary>
        </member>
        <member name="P:ManagerStandardLibrary.WebApiHelper.MsgResult.State">
            <summary>
            状态：SUCCESS-api方法执行完成，FAILD-api方法执行失败,
            </summary>
        </member>
        <member name="P:ManagerStandardLibrary.WebApiHelper.MsgResult.Message">
            <summary>
            执行接口包含的信息
            </summary>
        </member>
        <member name="P:ManagerStandardLibrary.WebApiHelper.MsgResult.Data">
            <summary>
            api方法返回值
            </summary>
        </member>
    </members>
</doc>
